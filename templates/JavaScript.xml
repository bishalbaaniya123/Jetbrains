<templateSet group="JavaScript">
  <template name="mapstate" value="const mapStateToProps = (state) =&gt; {&#10;    return {}&#10;};" description="prints map state to props" toReformat="false" toShortenFQNames="true" />
  <template name="conw" value="console.warn(&quot;$END$&quot;);" description="Console warn" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="se" value="this.setState({&#10;    $END$&#10;});" description="this.setState for react" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdm" value="componentDidMount() {&#10;    $END$&#10;}" description="Component Did Mount" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwm" value="componentWillMount() {&#10;    $END$&#10;}" description="component will mount" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ts" value="this.state.$END$" description="this.state." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="te" value="&lt;Text&gt;&#10;    $END$&#10;&lt;/Text&gt;" description="Text react native" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="st" value="style={styles.$END$} " description="style react native" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cond" value="{this.state.$STATE$ ? &#10;    $COMP$&#10;    : &#10;    $END$&#10;}" description="conditional rendering in react" toReformat="false" toShortenFQNames="true">
    <variable name="STATE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="COMP" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cost" value="const {$END$} = this.state;" description="constant state" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bf" value="$FUNC_NAME$ = ($PARAMS$) =&gt; {&#10;    $END$&#10;};" description="binding function" toReformat="false" toShortenFQNames="true">
    <variable name="FUNC_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vi" value="&lt;View&gt;&#10;    $END$&#10;&lt;/View&gt;" description="View React native" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="flexx" value="display: &quot;flex&quot;,&#10;flex: 1,&#10;alignItems: &quot;center&quot;,&#10;justifyContent: &quot;center&quot;,&#10;$END$" description="flex style" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mapp" value="{this.state.$ARRAY$.map((item, i) =&gt; (&#10;    $END$&#10;))}" description="this.state.map in react" toReformat="false" toShortenFQNames="true">
    <variable name="ARRAY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>